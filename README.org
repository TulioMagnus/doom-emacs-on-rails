* Index :toc:
- [[#description][Description]]
- [[#prerequisites][Prerequisites]]
- [[#installation][Installation]]
- [[#demonstration][Demonstration]]
- [[#tips][Tips]]
  - [[#search-and-replace-in-whole-project][Search and replace in whole project]]
  - [[#multiple-cursors][Multiple-cursors]]
  - [[#using-method-generator-emmet-in-ruby][Using method generator (emmet) in ruby]]
  - [[#customizing][Customizing]]
  - [[#configuring-forge-for-creating--reviewing-pull-requests][Configuring Forge for Creating / Reviewing pull requests]]
  - [[#for-other-git-server][For other git server]]
- [[#custom-keybindings][Custom Keybindings]]
- [[#using-autocomplete][Using Autocomplete]]
- [[#getting-help][Getting help]]
- [[#enabling-rubocop-integration][Enabling rubocop integration]]
- [[#emacs-installation][Emacs Installation]]
  - [[#using-gccemacs-recommended][Using GCCEmacs (recommended)]]
  - [[#using-emacs-from-snap-also-recommended][Using Emacs from snap (also recommended)]]
- [[#never-heard-about-emacs-before][Never heard about emacs before?]]
  - [[#history][History]]
  - [[#about-doom-emacs][About Doom Emacs]]
  - [[#what-i-need-to-know-to-start-using-][What i need to know to start using ?]]

* Description
# Personal configuration for doom emacs

+ Javascript support
+ Fully functional with Ruby on Rails
+ Some new functions added from vanilla doom emacs.
+ Very nice autocomplete
+ Code Lint
+ Awesome git client (magit)
+ Perfect for vim users

* Prerequisites
 - Git 2.23+
 - Emacs 27 with GNUTLS support
 - ripgrep 11.0+ =(sudo apt install ripgrep)=
 - GNU find
 - OPTIONAL fd 7.3.0+ (improves file indexing performance for some commands) =(sudo apt install find-fd)= (good for large projects)
 - typescript-language-server =(npm install -g typescript-language-server)=

* Installation
#+BEGIN_SRC shell
# Install my config
git clone --depth 1 https://github.com/hlissner/doom-emacs ~/.emacs.d
git clone https://github.com/otavioschwanck/doom_emacs_dotfiles.git ~/.doom.d
~/.emacs.d/bin/doom install

# Some dependencies (ubuntu)
sudo apt install find-fd ripgrep libtool-bin cmake

# If you use mac
brew install fd ripgrep

# Install dependencies for LSP
npm install -g vscode-css-languageserver-bin vscode-html-languageserver-bin typescript-language-server
#+END_SRC

* Demonstration
[[file:demonstration.gif]]

* Tips
** Search and replace in whole project
*** Replacing a text
You can search and replace by pressing =SPC s p= to search in project, then, =C-c C-e= to open the search on a buffer.  To replace some word, just run =:%s/old_text/new_text/g=. You also can use the multiple cursors.

*** Renaming multiple files
If you want to also, rename multiple files in project, just run =M-x= =find-dired= and type -name "\*your_class\*.extension" (without the \ (vertical bars)). It will open a dired with all matches in the project.  Just press =C-e C-e= to toggle the edit mode and edit the filenames like a text file!
Press C-c C-c to confirm the edit or C-c C-k to cancel.

** Multiple-cursors
To use multiple-cursors, select the word, then, press =M-d= to go forward or =M-D= to go backwards.  Press =C= to edit all.

** Using method generator (emmet) in ruby
Syntax: init@param1,param2;method_name@param1,param2;method2;method@param

Press C-e to expand.
** Customizing
Just create and user.el and add your configs there!  You also can create an folder called user/ and put any files there!

Example =~/.doom.d/user.el=:
#+begin_src elisp
;;; user.el -*- lexical-binding: t; -*-

;; You can see all the themes here: https://github.com/hlissner/emacs-doom-themes/tree/screenshots
(setq doom-theme 'doom-monokai-pro)

;; You can change your notes with SPC n d, its VERY COOL! USE IT PLEASE
(after! deft
  (setq deft-directory "~/Documentos"))

;; Make rubocop use bundle exec
(add-hook! 'ruby-mode-hook (setq flycheck-checker 'ruby-rubocop))

;; Disable Rubocop if you want
;; (setq-default flycheck-disabled-checkers '(ruby-reek ruby-rubylint ruby-rubocop))

;; Change the fill column length
(setq-hook! '(ruby-mode-hook js2-mode-hook) fill-column 125)

;; Set your favorite font there
(setq doom-font (font-spec :family "Fira Code" :size 14 :weight 'regular)
      doom-variable-pitch-font (font-spec :family "Fira Code" :size 15))

;; Disable truncate lines if you want
;; (setq truncate-lines nil)

;; If you use macos with rbenv on homebrew, add it
;; (setq rbenv-executable "/opt/homebrew/bin/rbenv")

;;; Ignore some folders on projectile (SPC SPC)
;; (setq projectile-globally-ignored-directories '("flow-typed" "node_modules" "~/.emacs.d/.local/" ".idea" ".vscode" ".ensime_cache" ".eunit" ".git" ".hg" ".fslckout" "_FOSSIL_" ".bzr" "_darcs" ".tox" ".svn" ".stack-work" ".ccls-cache" ".cache" ".clangd"))
#+end_src

** Configuring Forge for Creating / Reviewing pull requests
*** For github
1 - Go to https://github.com/settings/tokens and create a personal token with =repo (all)=, =read:org= and =user=

2 - Don't forget to configure your user in github with git config --global github.user youruser

3 - Create a file called =~/.authinfo=

4 - add =machine api.github.com login youruser^forge password yourtokenhere= and =machine api.github.com login otavioschwanck^github-review password yourtokenhere= to this file

5 - M-x =epa-encrypt-file= and select =~/authinfo= to encrypt with gpg.

6 - delete the =~/.authinfo=


** For other git server
See: https://practicalli.github.io/spacemacs/source-control/forge-configuration.html and https://magit.vc/manual/ghub/Getting-Started.html

* Custom Keybindings
| Key                 | Mode               | Description                                 |
| SPC a and SPC A     | Ruby               | Go to / create spec file                    |
| SPC v               | All                | Open terminal on project root               |
| SPC t t             | All                | Toggle truncate lines                       |
| SPC -               | All                | Indent the file                             |
| SPC =               | Ruby               | Runs rubocop -a on current file             |
| ]g and [g           | All                | Navigate on git changes                     |
| SPC l               | Terminals          | Clean terminal                              |
| C-j                 | All                | Go one sentence down (very useful)          |
| C-k                 | All                | Go one sentence up (very useful)            |
| TAB                 | All (except org)   | Same as / (search)                          |
| C-TAB               | All (except org)   | Same as ? (search-backwards)                |
| C-v                 | All (insert mode)  | Paste on insert mode                        |
| J and K             | Visual Mode        | Drag stuff down and up                      |
| C-, and C-;         | Normal Mode        | Previous and Next buffer                    |
| รง                   | Normal mode        | Save all files                              |
| SPC gdo and SPC gdm | Git conflict       | Keep other or Keep mine (git)               |
| SPC e               | All                | Toggle treemacs                             |
| C-e                 | Insert (web-mode)  | emmet-expand (like ul>li*3)                 |
| C-e                 | Insert (ruby-mode) | emmet-expand (Ruby) (Method generator)      |
| SPC m i             | normal             | toggle if / unless into single / multi-line |
| SPC m S             | normal             | split a giant string into strings with \    |
| SPC r s             | normal             | Search inside app/services OR app/business  |
| C-x C-a             | insert mode        | Insert rails routes on code                 |
| ga                  | normal             | Go to route on point                        |

* Using Autocomplete
#+caption: Autocomplete
[[file:autocomplete.gif]]

On my doom config, i've done several tweaks to the default autocomplete.
Instead of using enter to select the item in the popup, I use TAB.  The Tab can't go down and up in the autocomplete popup.  Instead of tab, i use =C-j= and =C-k=.

| Key     | Command                                                            |
| Tab     | Select the complation                                              |
| C-j     | Go down on the popup                                               |
| C-k     | Go up on the popup                                                 |
| C-l     | Shows Robe and LSP autocompletes                                   |
| C-p     | Select a similar word instantly (keep pressing to change the word) |
| C-x C-s | See all the snippets                                               |
| <tab>   | Toggle snippet / go foward in snippet                              |
| C-d     | (while snipped is active) Delete the highlighted snippet           |

* Getting help
For getting help, access doom official github page: https://github.com/hlissner/doom-emacs

* Enabling rubocop integration
In your =~/.doom.d/user.el=, just add:
#+begin_src elisp
(add-hook! 'ruby-mode-hook (setq-local flycheck-checker 'ruby-rubocop))
#+end_src

* Emacs Installation
** Using GCCEmacs (recommended)
For better performance, i recommend to use the gccemacs version.  To install it, you need to compile.

For Ubuntu:
#+begin_src
sudo apt install libxpm-dev libgif-dev libjpeg-dev libpng-dev libtiff-dev libx11-dev libncurses5-dev automake autoconf texinfo libgtk2.0-dev
sudo add-apt-repository ppa:ubuntu-toolchain-r/ppa
sudo apt install gcc-10 g++-10 libgccjit0 libgccjit-10-dev libjansson4 libjansson-dev
git clone git://git.sv.gnu.org/emacs.git
cd emacs
git checkout feature/native-comp
export CC=/usr/bin/gcc-10 CXX=/usr/bin/gcc-10
./autogen.sh
./configure --with-nativecomp --with-json CFLAGS="-O3 -mtune=native -march=native -fomit-frame-pointer"
make -j2 NATIVE_FULL_AOT=1
sudo make install
#+end_src

** Using Emacs from snap (also recommended)
Just run `sudo snap install emacs --classic`

* Never heard about emacs before?
** History
Emacs is a text editor designed for POSIX operating systems and available on Linux, BSD, macOS, Windows, and more.
Users love Emacs because it features efficient commands for common but complex actions and for the plugins and configuration hacks that have developed around it for nearly 40 years.

** About Doom Emacs
Doom emacs is a configuration framework built over emacs that brings a package manager and a lot of facilities to build your own emacs configuration.
It also brings the =Evil Mode= implementation, that set the =vim keybindings= in emacs.

** What i need to know to start using ?
I really recommend you to learn the basics of vim first, choose one:

+ [[https://www.udemy.com/course/vim-commands-cheat-sheet/][Vim Udemy Course]] (non-free) (for vim) (3h course) (very good course, i did this) (Very Complete!)
+ [[https://www.youtube.com/watch?v=ER5JYFKkYDg][Vim Tutorial pt 1]] and [[https://www.youtube.com/watch?v=tExTz7GnpdQ][Vim Tutorial pt 2]] (free) (basic)
+ [[https://www.youtube.com/watch?v=H3o4l4GVLW0&list=PLm323Lc7iSW_wuxqmKx_xxNtJC_hJbQ7R][Vim Youtube Course - 6 Videos, ignore the 6]] (free) (basic-intermediary)

After that, you can see the [[https://www.youtube.com/watch?v=rCMh7srOqvw&list=PLhXZp00uXBk4np17N39WvB80zgxlZfVwj][Doom Casts]] to learn the basics of doom emacs (optional)
Don't forget to see the =evil cheatsheet pt-BR.png= on the root of this repository!

Don'tt forget the [[https://discord.gg/qvGgnVx][Doom Emacs Discord Server]], is always full of people that always helps!
You can get help of any command on doom with SPC h p (function) of SPC h k + keybinding = (to see the options, etc.)
